[
    { "comment": "THESE TESTS SHOULD BE PUSHED UPSTREAM" },

    { "comment": "Adding to \"/-\" adds to the end of the array (ADD BECAUSE SIMPLER)",
      "doc": [ 1, 2 ],
      "patch": [ { "op": "add", "path": "/-", "value": 3 } ],
      "expected": [ 1, 2, 3 ] },

    { "comment": "move target can use '-'?",
      "doc": { "to":[ 1, 2 ], "from": 3 },
      "patch": [ { "op": "move", "from":"/from", "path": "/to/-" } ],
      "expected": { "to":[ 1, 2, 3 ] } },

    { "comment": "copy target can use '-'?",
      "doc": { "to":[ 1, 2 ], "from": 3 },
      "patch": [ { "op": "copy", "from":"/from", "path": "/to/-" } ],
      "expected": { "to":[ 1, 2, 3 ], "from": 3 } },

    { "comment": "replace target must exist",
      "doc": {"foo": "bar"},
      "patch": [{"op": "replace", "path": "/baz", "value": "sil"}],
      "error": "replace target not already set" },

    { "doc": {
            "foo": ["bar", "baz"],
            "": 0,
            "a/b": 1,
            "c%d": 2,
            "e^f": 3,
            "g|h": 4,
            "i\\j": 5,
            "k\"l": 6,
            " ": 7,
            "m~n": 8
            },
      "patch": [{"op": "test", "path": "/foo", "value": ["bar", "baz"]},
                {"op": "test", "path": "/foo/0", "value": "bar"},
                {"op": "test", "path": "",
                 "value": { "foo": ["bar", "baz"],
                            "": 0,
                            "a/b": 1,
                            "c%d": 2,
                            "e^f": 3,
                            "g|h": 4,
                            "i\\j": 5,
                            "k\"l": 6,
                            " ": 7,
                            "m~n": 8
                          }
                },
                {"op": "test", "path": "/", "value": 0},
                {"op": "test", "path": "/a~1b", "value": 1},
                {"op": "test", "path": "/c%d", "value": 2},
                {"op": "test", "path": "/e^f", "value": 3},
                {"op": "test", "path": "/g|h", "value": 4},
                {"op": "test", "path":  "/i\\j", "value": 5},
                {"op": "test", "path": "/k\"l", "value": 6},
                {"op": "test", "path": "/ ", "value": 7},
                {"op": "test", "path": "/m~0n", "value": 8}] },

    { "comment": "unrecognized op should fail (4.1)",
      "doc": {"foo": 1},
      "patch": [{"op": "spam", "path": "/foo", "value": 1}],
      "error": "Unrecognized op 'spam'" },

    { "doc": [""],
      "patch": [{"op": "replace", "path": "/0", "value": ""}],
      "expected": [""] },


 {
    "comment": "A.13 Invalid JSON Patch Document OTHER ERROR MASKS REQUESTED AND MAYBE THIS SHOULD BE DISABLED???",
    "doc": {
     "foo": "bar"
    },
    "patch": [
  { "op": "add", "path": "/baz", "value": "qux", "op": "remove" }
],
    "error": "operation has two 'op' members", "disabled":true
  },

    { "comment": "replace patches in below with simpler toplevel doc add" },
    { "comment": "Ok to have doc as toplevel string?",
      "doc": "foo",
      "patch": [{"op": "replace", "path": "", "value": "bar"}],
      "error": "doc is not a valid JSON-text (object / array) per rfc4627(2)" },

    { "comment": "Ok to have doc as toplevel number?",
      "doc": 1,
      "patch": [{"op": "replace", "path": "", "value": "bar"}],
      "error": "doc is not a valid JSON-text (object / array) per rfc4627(2)" },
    { "comment": "try these with more kinds of values" },

    { "comment": "Ok to have result doc as toplevel string? (THINKNO)",
      "doc": [ 1 ],
      "patch": [{"op": "replace", "path": "", "value": "bar"}],
      "expected": "bar", "disabled":false },


    { "comment": "'add' should replace existing member if it already exists",
      "doc": { "foo": 1 },
      "patch": [{"op": "add", "path": "/foo", "value": 2 }],
      "expected": { "foo": 2 } },



    { "comment": "THESE BELOW ARE FAILURES" },







    { "comment": "replace whole document",
      "doc": {"foo": "bar"},
      "patch": [{"op": "replace", "path": "", "value": {"baz": "qux"}}],
      "expected": {"baz": "qux"} ,"disabled":true },

    { "comment": "spurious patch properties",
      "doc": {"foo": 1},
      "patch": [{"op": "test", "path": "/foo", "value": 1, "spurious": 1}],
      "expected": {"foo": 1} },

    { "comment": "Whole document",
      "doc": { "foo": 1 },
      "patch": [{"op": "test", "path": "", "value": {"foo": 1}}],
      "disabled": true },

    { "comment": "replacing the root of the document is possible with add",
      "doc": {"foo": "bar"},
      "patch": [{"op": "add", "path": "", "value": {"baz": "qux"}}],
      "expected": {"baz":"qux"} ,"disabled":true },

    { "comment": "Adding to \"/-\" adds to the end of the array",
      "doc": [ 1, 2 ],
      "patch": [ { "op": "add", "path": "/-", "value": { "foo": [ "bar", "baz" ] } } ],
      "expected": [ 1, 2, { "foo": [ "bar", "baz" ] } ] },



    { "comment": "Adding to \"/-\" adds to the end of the array, even n levels down",
      "doc": [ 1, 2, [ 3, [ 4, 5 ] ] ],
      "patch": [ { "op": "add", "path": "/2/1/-", "value": { "foo": [ "bar", "baz" ] } } ],
      "expected": [ 1, 2, [ 3, [ 4, 5, { "foo": [ "bar", "baz" ] } ] ] ] },

    { "comment": "test remove with bad number should fail",
      "doc": {"foo": 1, "baz": [{"qux": "hello"}]},
      "patch": [{"op": "remove", "path": "/baz/1e0/qux"}],
      "error": "remove op shouldn't remove from array with bad number" },

    { "comment": "test replace with bad number should fail",
      "doc": [""],
      "patch": [{"op": "replace", "path": "/1e0", "value": false}],
      "error": "replace op shouldn't replace in array with bad number" ,"disabled":true },

    { "comment": "test copy with bad number should fail AND ERROR IS INCORRECT",
      "doc": {"baz": [1,2,3], "bar": 1},
      "patch": [{"op": "copy", "from": "/baz/1e0", "path": "/boo"}],
      "error": "copy op shouldn't work with bad number" ,"disabled":true },

    { "comment": "test move with bad number should fail AND ERROR MAYBEBAD",
      "doc": {"foo": 1, "baz": [1,2,3,4]},
      "patch": [{"op": "move", "from": "/baz/1e0", "path": "/foo"}],
      "error": "move op shouldn't work with bad number"  ,"disabled":true },

    { "comment": "test add with bad number should fail",
      "doc": ["foo", "sil"],
      "patch": [{"op": "add", "path": "/1e0", "value": "bar"}],
      "error": "add op shouldn't add to array with bad number", "disabled":true },

 {
    "comment": "A.13 Invalid JSON Patch Document OTHER ERROR MASKS REQUESTED AND MAYBE THIS SHOULD BE DISABLED???",
    "doc": {
     "foo": "bar"
    },
    "patch": [
  { "op": "add", "path": "/baz", "value": "qux", "op": "remove" }
],
    "error": "operation has two 'op' members", "disabled":true
  },

  {
    "comment": "A.15. Comparing Strings and Numbers NEEDS DECONFLATED THO NOTE PRECEDING",
    "doc": {
       "/": 9,
       "~1": 10
    },
    "patch": [{"op": "test", "path": "/~01", "value": "10"}],
    "error": "number is not equal to string", "disabled": true
  },

  {
    "comment": "A.16. Adding an Array Value",
    "doc": {
       "foo": ["bar"]
    },
    "patch": [{ "op": "add", "path": "/foo/-", "value": ["abc", "def"] }],
    "expected": {
      "foo": ["bar", ["abc", "def"]]
    }, "disabled":true
  },

    { "comment": "last" }
]
